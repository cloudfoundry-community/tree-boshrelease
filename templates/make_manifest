#!/bin/bash

infrastructure=$1
shift

if [ "$infrastructure" != "openstack-nova" ] && \
    [ "$infrastructure" != "aws-ec2" ] && \
    [ "$infrastructure" != "warden" ] ; then
  echo "usage: ./make_manifest <openstack-nova|warden>"
  exit 1
fi

BOSH_STATUS=$(bosh status)
DIRECTOR_UUID=$(echo "$BOSH_STATUS" | grep UUID | awk '{print $2}')
DIRECTOR_CPI=$(echo "$BOSH_STATUS" | grep CPI | awk '{print $2}')
NAME=tree-$infrastructure

if [[ $infrastructure = "warden" ]]; then
  if [[ $DIRECTOR_CPI != "warden" ]]; then
    echo "Not targeting bosh-lite with warden CPI. Please use 'bosh target' before running this script."
    exit 1
  fi
fi

if [[ $infrastructure = "aws-ec2" ]]; then
  if [[ $DIRECTOR_CPI != "aws" ]]; then
    echo "Not targeting an AWS BOSH. Please use 'bosh target' before running this script."
    exit 1
  fi
fi

if [[ $infrastructure = "openstack-nova" ]]; then
  if [[ $DIRECTOR_CPI != "openstack" ]]; then
    echo "Not targeting an OpenStack BOSH. Please use 'bosh target' before running this script."
    exit 1
  fi
fi

templates=$(dirname $0)
release=$templates/..
tmpdir=$release/tmp

mkdir -p $tmpdir
cp $templates/tree-stub-spiff.yml $tmpdir/stub-with-uuid.yml
echo $DIRECTOR_UUID
perl -pi -e "s/PLACEHOLDER-DIRECTOR-UUID/$DIRECTOR_UUID/g" $tmpdir/stub-with-uuid.yml
perl -pi -e "s/NAME/$NAME/g" $tmpdir/stub-with-uuid.yml

$templates/generate_deployment_manifest \
                        $infrastructure \
                        $tmpdir/stub-with-uuid.yml \
                        $* > $tmpdir/tree-manifest-$infrastructure.yml

bosh deployment $tmpdir/tree-manifest-$infrastructure.yml
bosh status
